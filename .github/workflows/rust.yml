name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: build
      continue-on-error: true
      id: build
      run: cargo build --release
    - name: build-retry
      id: retry
      if: steps.build.outcome=='failure'
      run: cargo build --release --verbose
    - name: set status
      run: |
        if ${{ steps.build.outcome=='success' || steps.retry.outcome=='success' }}
          echo fine
        else
          exit 1
        fi
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: Check clippy
      run: cargo clippy
    - name: Check formatting
      run: cargo fmt --all -- --check
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: Run tests
      run: cargo test --lib --release
  run_for_score:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: build
      continue-on-error: true
      id: build
      run: cargo build --release
    - name: build-retry
      id: retry
      if: steps.build.outcome=='failure'
      run: cargo build --release --verbose
    - name: Run for score
      run: cargo run --release --bin aoc



